services:
  # Main application service for production
  microplan:
    build:
      context: .
      dockerfile: Dockerfile.simple
      args:
        - NODE_ENV=production
    container_name: microplan-app
    restart: unless-stopped
    networks:
      - microplan-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.microplan.rule=Host(`microplan.nokia.th`) || Host(`localhost`)"
      - "traefik.http.routers.microplan.priority=1"
      - "traefik.http.routers.microplan.entrypoints=web,websecure"
      - "traefik.http.routers.microplan.tls=true"
      - "traefik.http.services.microplan.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.microplan-redirect.rule=Host(`microplan.nokia.th`) || Host(`localhost`)"
      - "traefik.http.routers.microplan-redirect.entrypoints=web"
      - "traefik.http.routers.microplan-redirect.middlewares=redirect-to-https"
    security_opt:
      - no-new-privileges:true

  # Load balancer and reverse proxy
  traefik:
    image: traefik:v3.0
    container_name: microplan-traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@microplan.nokia.th"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--serverstransport.insecureskipverify=true"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
      - "--providers.file.watch=true"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik-certs:/etc/traefik/certs:ro
      - ./docker/traefik-dynamic.yml:/etc/traefik/dynamic.yml:ro
    networks:
      - microplan-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.dashboard.rule=Host("traefik.localhost")'
      - "traefik.http.routers.dashboard.entrypoints=web,websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=admin:$$2y$$10$$2b2cu2V2d2Z2d2Z2d2Z2de"

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: microplan-prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--storage.tsdb.retention.time=30d"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - microplan-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9090/-/healthy",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: microplan-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SERVER_ROOT_URL=http://grafana.localhost
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3000:3000"
    networks:
      - microplan-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.grafana.rule=Host("grafana.localhost")'
      - "traefik.http.routers.grafana.entrypoints=web,websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    security_opt:
      - no-new-privileges:true

networks:
  microplan-network:
    driver: bridge
    name: microplan-production
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  prometheus_data:
    driver: local
    name: microplan-prometheus-data
  grafana_data:
    driver: local
    name: microplan-grafana-data
  traefik_acme:
    driver: local
    name: microplan-traefik-acme
